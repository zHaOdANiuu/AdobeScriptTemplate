const atob = (function (BASE_CHARACTERS_TAB) {
  return function (encoded) {
    return encoded
      .replace(new RegExp('[^A-Za-z0-9+/]', 'g'), '')
      .replace(/\S{1,4}/g, function (str) {
        const length = str.length;
        const binaryShiftedRight =
          (length > 0 ? BASE_CHARACTERS_TAB[str.charAt(0)] << 18 : 0) |
          (length > 1 ? BASE_CHARACTERS_TAB[str.charAt(1)] << 12 : 0) |
          (length > 2 ? BASE_CHARACTERS_TAB[str.charAt(2)] << 6 : 0) |
          (length > 3 ? BASE_CHARACTERS_TAB[str.charAt(3)] : 0);
        const chars = [
          String.fromCharCode(binaryShiftedRight >>> 16),
          String.fromCharCode((binaryShiftedRight >>> 8) & 0xff),
          String.fromCharCode(binaryShiftedRight & 0xff)
        ];
        chars.length -= [0, 0, 2, 1][length % 4];
        return chars.join('');
      });
  };
})({
  A: 0,
  B: 1,
  C: 2,
  D: 3,
  E: 4,
  F: 5,
  G: 6,
  H: 7,
  I: 8,
  J: 9,
  K: 10,
  L: 11,
  M: 12,
  N: 13,
  O: 14,
  P: 15,
  Q: 16,
  R: 17,
  S: 18,
  T: 19,
  U: 20,
  V: 21,
  W: 22,
  X: 23,
  Y: 24,
  Z: 25,
  a: 26,
  b: 27,
  c: 28,
  d: 29,
  e: 30,
  f: 31,
  g: 32,
  h: 33,
  i: 34,
  j: 35,
  k: 36,
  l: 37,
  m: 38,
  n: 39,
  o: 40,
  p: 41,
  q: 42,
  r: 43,
  s: 44,
  t: 45,
  u: 46,
  v: 47,
  w: 48,
  x: 49,
  y: 50,
  z: 51,
  0: 52,
  1: 53,
  2: 54,
  3: 55,
  4: 56,
  5: 57,
  6: 58,
  7: 59,
  8: 60,
  9: 61,
  '+': 62,
  '/': 63,
  '=': 64
});

export default atob
